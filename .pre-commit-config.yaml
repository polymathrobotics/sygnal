---
# Pre-commit config for Polymath Code Standard - https://gitlab.com/polymathrobotics/polymath_code_standard
# Synced from origin - DO NOT EDIT IN CONSUMING REPOSITORY

# See https://pre-commit.com for more information on these settings
repos:
  # Generally useful checks provided by pre-commit
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
        # exclude ansible plugin modules as they must not be executable
        exclude: ^ansible/collections/ansible_collections/polymath/core/plugins/modules/
      - id: check-symlinks
      - id: check-toml
      - id: check-xml
      - id: end-of-file-fixer
      - id: forbid-submodules
      - id: mixed-line-ending
      - id: trailing-whitespace
  # JSON (This one supports comments, vs the one in pre-commit-hooks repo does not)
  - repo: https://gitlab.com/bmares/check-json5
    rev: v1.0.0
    hooks:
      - id: check-json5
  # Python
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.5
    hooks:
      - id: ruff-format
      - id: ruff
        args: [--fix]
  # C++ formatting
  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: v19.1.7
    hooks:
      - id: clang-format
        args: ["--style=file:.config/clang-format"]
  # C++ linting
  - repo: https://github.com/cpplint/cpplint
    rev: 2.0.0
    hooks:
      - id: cpplint
        args: ["--config=.cpplint.cfg", --quiet, --output=sed]
  # Markdown
  - repo: https://github.com/jackdewinter/pymarkdown
    rev: v0.9.28
    hooks:
      - id: pymarkdown
        args: [-d, MD013, fix]
  # XML
  - repo: https://github.com/emersonknapp/ament_xmllint
    rev: v0.1
    hooks:
      - id: ament_xmllint
  # YAML
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.29.0
    hooks:
      - id: yamllint
        args: [-d, "{extends: default, rules: {line-length: {max: 256}, commas: false}}"]
  # CMake
  - repo: https://github.com/cmake-lint/cmake-lint
    rev: 1.4.3
    hooks:
      - id: cmakelint
        args: [--linelength=140]
  # Bash / Shell scripts
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: [-e, SC1091]
  # Docker/Container files
  - repo: https://github.com/AleksaC/hadolint-py
    rev: v2.12.1b3
    hooks:
      - id: hadolint
        args: [
          --ignore, SC1091,
          --ignore, DL3006,
          --ignore, DL3008,
        ]
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: insert-license
        types_or: [python, cmake, shell]
        name: Copyright headers for Python/CMake
        args: [
          --license-filepath, .config/copyright.txt,
          --comment-style, '#',
          --allow-past-years,
          --no-extra-eol,
        ]
      - id: insert-license
        types_or: [c++, c]
        name: Copyright headers for C/C++
        args: [
          --license-filepath, .config/copyright.txt,
          --comment-style, '//',
          --allow-past-years,
        ]
  # Ansible
  - repo: https://github.com/ansible/ansible-lint
    rev: v25.2.1
    hooks:
      - id: ansible-lint
        entry: /bin/sh -c "ANSIBLE_COLLECTIONS_PATH=ansible/collections python3 -m ansiblelint -v --force-color ansible/"
        always_run: false
        files: ^ansible/
        additional_dependencies:
          - ansible

---
stages:
  - build
  - test
  - package
  - publish

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        DEFAULT_VCS_CHECKOUT: ""
    - if: $CI_COMMIT_TAG
      variables:
        DEFAULT_VCS_CHECKOUT: ""
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      variables:
        DEFAULT_VCS_CHECKOUT: $CI_COMMIT_REF_NAME

include:
  - component: gitlab.com/polymathrobotics/polymath_core/pre-commit@ci-1.3
  - component: gitlab.com/polymathrobotics/polymath_core/vcs-import@ci-1.3
    inputs:
      name: ros2_sources
      repos_file: repos.yaml
      vcs_dest: src/external
      checkout_branch: ${DEFAULT_VCS_CHECKOUT}
  # Import ROS2 package build template
  - component: gitlab.com/polymathrobotics/polymath_core/ros2-package@ci-1.3
    inputs:
      base_image: registry.gitlab.com/polymathrobotics/polymath_core/sim:humble

# Build and test mvec_lib ROS2 package
mvec_lib_build_and_test:
  extends: .ros2_build_and_test
  needs: [ros2_sources]
  rules:
    - changes: [mvec/mvec_lib/**/*]
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  variables:
    PACKAGES: mvec_lib
    RMW_IMPLEMENTATION_WRAPPER: rmw_stats_shim
    RMW_IMPLEMENTATION: rmw_cyclonedx_cpp

# Hardware test job (manual only, requires CAN hardware)
# mvec_lib_hardware_test:
#   extends: .ros2_build_and_test
#   needs: [ros2_sources]
#   when: manual
#   allow_failure: true
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#       when: manual
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#       when: manual
#   variables:
#     PACKAGES: mvec_lib
#     # CAN_AVAILABLE: "1"
#     RMW_IMPLEMENTATION_WRAPPER: rmw_stats_shim
#     RMW_IMPLEMENTATION: rmw_cyclonedx_cpp